{% set version = datetime.datetime.utcnow().strftime('%Y%m%d.%H.%M.%S') %}

package:
  name: conda-forge-repodata-patches
  version: {{ version }}

source:
  path: .

build:
  noarch: generic
  number: 1
  script:
    - pytest -vv test_patch_yaml_utils.py
    - pytest -vv test_gen_patch_json.py
    - python gen_patch_json.py

requirements:
  build:
    - python 3.11.*
    - requests
    - tqdm
    - license-expression
    - packaging
    - pyyaml
    - pydantic !=2.9.*
    - pytest
    - conda-build
    - zstandard
  host:
  run:

test:
  commands:
    {% for subdir in ("noarch", "linux-64", "linux-armv7l", "linux-ppc64le", "osx-64", "osx-arm64", "win-32", "win-64") %}
    - test -e $PREFIX/{{ subdir }}/patch_instructions.json
    {% endfor %}

about:
  summary: generate tweaks to index metadata, hosted separately from anaconda.org index
  home: https://github.com/conda-forge/conda-forge-repodata-patches-feedstock
  license: CC-PDDC
  description: |
    See the [recipe/README.md](recipe/README.md) for how generate patches from static YAML files.
    This mechanism should work for most things. If it does not work for your specific case, you
    can write custom code in `generate_patch_json.py`.

extra:
  recipe-maintainers:
    - conda-forge/core
