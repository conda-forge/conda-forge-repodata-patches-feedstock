# from this code
# if record_name == "dask":
#     deps = record.get("depends", ())
#     # older versions of dask are incompatible with bokeh=3
#     # https://github.com/dask/community/issues/283#issuecomment-1295095683
#     if (
#         record.get("timestamp", 0) < 1667000131632
#     ):  # releases prior to 2022.10.1
#         bokeh_pinning = [x for x in record["depends"] if x.startswith("bokeh")]
#         if bokeh_pinning:
#             bokeh_pinning = bokeh_pinning[0]
#             _replace_pin(
#                 bokeh_pinning,
#                 bokeh_pinning
#                 + (",<3" if bokeh_pinning[-1].isdigit() else " <3"),
#                 deps,
#                 record,
#             )
#     # older versions of dask are incompatible with pandas=2
#     if record.get("timestamp", 0) < 1676063992630:  # releases prior to 2023.2.0
#         pandas_pinning = [
#             x for x in record["depends"] if x.startswith("pandas")
#         ]
#         if pandas_pinning:
#             pandas_pinning = pandas_pinning[0]
#             _replace_pin(
#                 pandas_pinning,
#                 pandas_pinning
#                 + (",<2" if pandas_pinning[-1].isdigit() else " <2"),
#                 deps,
#                 record,
#             )
if:
  name: dask
  timestamp_lt: 1667000131632
then:
  - tighten_depends:
      name: bokeh
      upper_bound: "3"
---
# from the same code snippet as above
if:
  name: dask
  timestamp_lt: 1676063992630
then:
  - tighten_depends:
      name: pandas
      upper_bound: "2"
---
# from this code bit
# if record_name in {"distributed", "dask"}:
#     version = parse_version(record["version"])
#     if (
#         version >= parse_version("2021.12.0")
#         and version < parse_version("2022.8.0")
#         or version == parse_version("2022.8.0")
#         and record["build_number"] < 2
#     ):
#         for dep in record["depends"]:
#             if dep.startswith("dask-core") or dep.startswith("distributed"):
#                 pkg = dep.split()[0]
#                 major_minor_patch = record["version"].split(".")
#                 major_minor_patch[2] = str(int(major_minor_patch[2]) + 1)
#                 next_patch_version = ".".join(major_minor_patch)
#                 _replace_pin(
#                     dep,
#                     f"{pkg} >={version},<{next_patch_version}.0a0",
#                     record["depends"],
#                     record,
#                 )
if:
  name: dask
  version_ge: 2021.12.0
  version_lt: 2022.8.0
then:
  - replace_depends:
      old: dask-core ${version}.[*]
      new: dask-core >=${version},<${next_version}.0a0
  - replace_depends:
      old: distributed ${version}.[*]
      new: distributed >=${version},<${next_version}.0a0
---
if:
  name: dask
  version: 2022.8.0
  build_number_lt: 2
then:
  - replace_depends:
      old: dask-core *${version}*
      new: dask-core >=${version},<${next_version}.0a0
  - replace_depends:
      old: distributed *${version}*
      new: distributed >=${version},<${next_version}.0a0
---
# pyarrow minimum version was bumped to 14.0.1 in dask 2024.8.2
if:
  name: dask
  version_ge: 2024.8.2
  version_lt: 2024.10.0
then:
  - replace_depends:
      old: pyarrow >=7.0
      new: pyarrow >=14.0.1
  - remove_depends: pyarrow-hotfix
