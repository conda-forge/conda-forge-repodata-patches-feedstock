# from this code
# conda moved to calvar from semver and this broke old versions of
# conda smithy that do on-the-fly version checks
# if record_name == "conda-smithy" and (
#     parse_version(record["version"]) <= parse_version("3.21.1")
# ):
#     for i in range(len(record["depends"])):
#         parts = record["depends"][i].split(" ")
#         if parts[0] == "conda":
#             if len(parts) == 1:
#                 parts.append("<5a0")
#             elif len(parts) == 2 and "<" not in parts[1]:
#                 parts[1] = parts[1] + ",<5a0"
#             record["depends"][i] = " ".join(parts)
if:
  name: conda-smithy
  version_le: 3.21.1
then:
  - tighten_depends:
      name: conda
      upper_bound: "5"
---
if:
  name: conda-smithy
  version_le: 3.30.1
then:
  - tighten_depends:
      name: conda-build
      upper_bound: 3.28.2
---
if:
  subdir_in: noarch
  artifact_in: conda-smithy-3.32.0-pyhd8ed1ab_0.conda
then:
  - add_depends: jsonschema
---
# https://github.com/conda-forge/conda-forge.github.io/issues/2117
if:
  name: conda-smithy
  timestamp_lt: 1710847759000
then:
  - tighten_depends:
      name: conda-build
      upper_bound: 24.5.0
---
if:
  name: conda-smithy
  version_le: 3.37.1
then:
  - tighten_depends:
      name: conda-build
      upper_bound: 24.7.0
---
if:
  name: conda-smithy
  has_depends: rattler-build-conda-compat?( *)
  timestamp_lt: 1722516295000
then:
  - tighten_depends:
      name: rattler-build-conda-compat
      max_pin: "x"
